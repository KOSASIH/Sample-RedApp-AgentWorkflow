/*
 * © 2011 Sabre Inc. All rights reserved.
 * 
 * THE SOFTWARE, SAMPLE CODES AND ANY COMPILED PROGRAMS CREATED USING THE
 * SOFTWARE ARE FURNISHED "AS IS" WITHOUT WARRANTY OF ANY KIND, INCLUDING BUT
 * NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE. NO ORAL OR WRITTEN INFORMATION OR ADVICE GIVEN BY SABRE,
 * ITS AGENTS OR EMPLOYEES SHALL CREATE A WARRANTY OR IN ANY WAY INCREASE THE
 * SCOPE OF THIS WARRANTY, AND YOU MAY NOT RELY ON ANY SUCH INFORMATION OR
 * ADVICE. SABRE DOES NOT WARRANT, GUARANTEE, OR MAKE ANY REPRESENTATIONS
 * REGARDING THE USE, OR THE RESULTS OF THE USE, OF THE SOFTWARE, COMPILED
 * PROGRAMS CREATED USING THE SOFTWARE, OR WRITTEN MATERIALS IN TERMS OF
 * CORRECTNESS, ACCURACY, RELIABLITY, CURRENTNESS, OR OTHERWISE. THE ENTIRE RISK
 * AS TO THE RESULTS AND PERFORMANCE OF THE SOFTWARE AND ANY COMPILED
 * APPLICATIONS CREATED USING THE SOFTWARE IS ASSUMED BY YOU. BY YOUR USE, YOU
 * AGREE THAT NEITHER SABRE NOR ANYONE ELSE WHO HAS BEEN INVOLVED IN THE
 * CREATION, PRODUCTION OR DELIVERY OF THE SOFTWARE SHALL BE LIABLE FOR ANY
 * DIRECT, INDIRECT, CONSEQUENTIAL, OR INCIDENTAL DAMAGES (INCLUDING DAMAGES FOR
 * LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS
 * INFORMATION, AND THE LIKE) ARISING OUT OF THE USE OF OR INABILITY TO USE SUCH
 * PRODUCT EVEN IT SABRE HAS BEEN ADVISED OF THE POSSIBLITY OF SUCH DAMAGES.
 * THIS SOFTWARE IS OWNED AND COPYRIGHTED BY SABRE OR ITS THIRD PARTY SUPPLIERS.
 * YOUR LICENSE TO UTILIZE IT CONFERS NO OWNERSHIP RIGHTS IN THE SOFTWARE OR
 * THOSE PORTIONS YOU MAY USE IN A PROJECT. YOU AGREE TO INDEMNIFY AND HOLD
 * HARMLESS SABRE AND ITS AFFILIATES FOR ANY CLAIM BROUGHT AGAINST IT BASED UPON
 * YOUR USE OF THE SOFTWARE OR ANY COMPILED PROGRAMS CREATED USING THE SOFTWARE
 */
package com.sabre.tn.redapp.example.workflow.editor;

import java.awt.FlowLayout;

import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.FillLayout;
import org.eclipse.swt.layout.FormLayout;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Group;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Layout;

import com.sabre.edge.platform.core.editor.editors.AbstractAppEditor;
import com.sabre.tn.redapp.example.workflow.uiparts.AgentProfileWidget;
import com.sabre.tn.redapp.example.workflow.uiparts.EmuCommandWidget;
import com.sabre.tn.redapp.example.workflow.uiparts.IWidgetAction;
import com.sabre.tn.redapp.example.workflow.uiparts.SWSSoapClientWidget;

/**
 * Editor class
 */
public class SampleEditorEditor extends AbstractAppEditor {
	
	private String content="";
	private IWidgetAction defaultAction=null;
	
	private Group compMain;

	public SampleEditorEditor() {
		super();
		
		
	}

	public void createPartControl(Composite parent) {
		
		//
		progressAnimation.init(parent);
		
		parent.setLayout(new FillLayout());
		compMain = new Group(parent, SWT.FILL);
		
		//compMain.setLayout(new GridLayout(1, true));
		compMain.setLayout(new FillLayout(SWT.VERTICAL));
		
		//Label label = new Label(compMain, SWT.NONE);
		//label.setText("SampleEditorEditor");
		
		//Label label1 = new Label(compMain, SWT.NONE);
		//label1.setText("SampleEditorEditor1");		
		
		//AgentProfileWidget ap = new AgentProfileWidget(compMain, SWT.NONE);
		//ap.setLayoutData(new GridData(GridData.FILL_BOTH));
		//ap.setSize(-1, 200);
		
		//EmuCommandWidget emu = new EmuCommandWidget(compMain, SWT.NONE);
		//emu.setLayoutData(new GridData(GridData.FILL_VERTICAL));
		//emu.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
		
		SWSSoapClientWidget sws = new SWSSoapClientWidget(compMain, SWT.NONE);
		//sws.setLayoutData(new GridData(GridData.FILL_BOTH));
		
		//Label label2 = new Label(compMain, SWT.NONE);
		//label2.setText("SampleEditorEditor1");		
		
	}
	
	public void setContent(String content){
		this.content = content;
		compMain.setText(this.content);
	}
	public void setDefaultAction(IWidgetAction action){
		this.defaultAction = action;
	}
}
