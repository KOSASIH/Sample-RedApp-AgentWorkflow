/// <reference types="react" />
declare module "sabre-ngv-ioc/interfaces/Configuration" {
    export interface Configuration {
        type: string;
        name: string;
        component: any;
    }
}
declare module "sabre-ngv-ioc/common/Components" {
    export const Components: {
        REACT_COMPONENT: string;
        REDUX_REDUCER: string;
        REDUX_ACTION: string;
        PROCESSOR: string;
        DEPENDENCY: string;
        VALIDATOR: string;
        COMMAND_FLOW: string;
    };
}
declare module "sabre-ngv-ioc/ConfigurationBuilder" {
    import * as React from 'react';
    import { Container, ContainerModule } from 'inversify';
    /**
     * Class to build configuration for React components
     */
    export class ConfigurationBuilder {
        private parentContainer;
        private configurations;
        /**
         * @constructor
         */
        constructor(parentContainer: Container);
        /**
         * Method to register react component to existing configurations
         */
        addReactComponent(name: string, componentClass: React.ComponentClass<any>): ConfigurationBuilder;
        /**
         * Actions are used by an automatic Action obj. creator,
         * see TB.components>AbstractComponent#mapDispatchToProps.
         * You don't need to register an action if you handle creating
         * and dispatching the plain Action type object by yourself
         */
        addAction(name: string, actionCreator: Function): ConfigurationBuilder;
        /**
         * Method to register processors used by reducer
         */
        addProcessor(componentType: string, action: string, processor: Function): ConfigurationBuilder;
        /**
         * Register validator function
         *
         * @param validatorType - type of validation
         * @param validator - function performing the validation
         */
        addValidator(validatorType: string, validator: Function): ConfigurationBuilder;
        /**
         * Register system-wide default processors used when an action is dispatched
         * and no specific processor is registered for the given component
         */
        addDefaultProcessor(action: string, processor: Function): ConfigurationBuilder;
        /**
         * Register function describing a dependency between components
         */
        addDependencyDescription(actionType: string, name: string, dependency: Function): ConfigurationBuilder;
        /**
         * Adds Command Flow to existing configurations
         */
        addCommandFlow(name: string, commandFlow: Function, successHandler?: Function): ConfigurationBuilder;
        /**
         * Bind a dependency with 'UPDATE' action
         */
        addDependencyDescriptionOnDefaultAction(name: string, dependency: Function): ConfigurationBuilder;
        private updateComponents(type, name, component);
        /**
         * Creates new Container module based on registered configurations
         */
        buildAndRegister(): ContainerModule;
        private registerConfigurations(bindFunction);
    }
}
declare module "sabre-ngv-ioc/Container" {
    import { interfaces, ContainerModule, Container } from 'inversify';
    import 'reflect-metadata';
    /**
     * For IoC module internal use, initialize a container if not initialized
     */
    export function initializeContainer(): void;
    /**
     * Return global IoC container (singleton)
     */
    export function getContainer(): Container;
    export { Container, ContainerModule, interfaces };
}
